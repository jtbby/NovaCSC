public class NodeBasedSet<T> implements SetInterface<T>
{
   private SetNode<T> theSet;
  
   
   public NodeBasedSet()
   {
       theSet = null; 
   }
  
   
   public int size()
   {
       SetNode<T> curr = theSet; 
       int count = 0; 
      
       
       while(curr != null)
       {
           count++; 
           curr = curr.getLink(); 
       }
      
       return count;
   }
  
  
   public boolean memberOf(T element)
   {
       SetNode<T> curr = theSet; 
      
       while(curr != null)
       {
           if(curr.getInfo().equals(element))
               return true;
           curr = curr.getLink();
       }
      
       return false; 
   }
  
   
   public void add(T element) throws DuplicateFoundException
   {
       if(memberOf(element)) 
           throw new DuplicateFoundException("Duplicate cannot be added to a Set"); // Assuming class DuplicateFoundException is already defined
      
       SetNode<T> node = new SetNode<T>(element); 
       node.setLink(theSet); 
       theSet = node; 
   }
  
   
   public void delete(T element)
   {
       if(memberOf(element)) 
       {
           SetNode<T> curr = theSet;
           SetNode<T> pre = null; 
          
           while(curr != null)
           {
               if(curr.getInfo().equals(element))
                   break;
               pre = curr;
               curr = curr.getLink();
           }
          
           if(pre == null) 
               theSet = theSet.getLink();
           else 
               pre.setLink(curr.getLink());
       }
   }
  
   
   public String toString()
   {
       String str = "";
       SetNode<T> curr = theSet; 
      
       
       while(curr != null)
       {
          
           str += curr.getInfo().toString()+" ";
           curr = curr.getLink(); // go to next node
       }
      
       return str;
   }
}
